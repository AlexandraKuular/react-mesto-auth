{"ast":null,"code":"var _jsxFileName = \"/Users/sasha/Desktop/dev/react-mesto-auth/src/components/InfoTooltip.js\";\nimport btnPopupClose from '../images/CloseIcon.svg';\nimport authSuccess from '../images/authSuccess.svg';\nimport authFail from '../images/authFail.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InfoTooltip(_ref) {\n  let {\n    open,\n    message,\n    status,\n    onClose\n  } = _ref;\n  const getIcon = status => {\n    switch (status) {\n      case \"success\":\n        return authSuccess;\n      case \"fail\":\n        return authFail;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `popup `,\n    style: open ? {\n      display: \"block\"\n    } : {\n      display: \"none\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"popup__btnborder\",\n        type: \"button\",\n        onClick: onClose,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"popup__btn-close\",\n          id: \"popup__btn-closeProfile\",\n          src: btnPopupClose,\n          alt: \"\\u041A\\u043D\\u043E\\u043F\\u043A\\u0430 \\u0437\\u0430\\u043A\\u0440\\u044B\\u0442\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"popup__auth-icon\",\n        src: getIcon(status),\n        alt: \"\\u0412\\u044B \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043B\\u0438\\u0441\\u044C!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"popup__auth-text\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c = InfoTooltip;\nexport default InfoTooltip;\n\n//Вы успешно <br/>зарегистрировались!\nvar _c;\n$RefreshReg$(_c, \"InfoTooltip\");","map":{"version":3,"names":["btnPopupClose","authSuccess","authFail","jsxDEV","_jsxDEV","InfoTooltip","_ref","open","message","status","onClose","getIcon","className","style","display","children","type","onClick","id","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sasha/Desktop/dev/react-mesto-auth/src/components/InfoTooltip.js"],"sourcesContent":["import btnPopupClose from '../images/CloseIcon.svg';\nimport authSuccess from '../images/authSuccess.svg';\nimport authFail from '../images/authFail.svg';\n\n\nfunction InfoTooltip({ open, message, status, onClose }) {\n\n  \n\n  const getIcon = (status) => {\n    switch (status) {\n       case \"success\": \n          return authSuccess;\n      case \"fail\":\n        return authFail;\n     }\n  }\n\n  return (\n    <div className={`popup `} style={open ? {display: \"block\"} : {display: \"none\"}}>\n      <div className=\"popup__container\">\n        <button className=\"popup__btnborder\" type=\"button\" onClick={onClose}>\n          <img\n            className=\"popup__btn-close\"\n            id=\"popup__btn-closeProfile\"\n            src={btnPopupClose}\n            alt=\"Кнопка закрытия\"\n          />\n        </button>\n        <img\n          className='popup__auth-icon'\n          src={getIcon(status)}\n          alt='Вы успешно зарегистрировались!'\n        />\n        <h2 className=\"popup__auth-text\">{message}</h2>\n      </div>\n    </div>\n  )\n}\n\nexport default InfoTooltip;\n\n//Вы успешно <br/>зарегистрировались!"],"mappings":";AAAA,OAAOA,aAAa,MAAM,yBAAyB;AACnD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG9C,SAASC,WAAWA,CAAAC,IAAA,EAAqC;EAAA,IAApC;IAAEC,IAAI;IAAEC,OAAO;IAAEC,MAAM;IAAEC;EAAQ,CAAC,GAAAJ,IAAA;EAIrD,MAAMK,OAAO,GAAIF,MAAM,IAAK;IAC1B,QAAQA,MAAM;MACX,KAAK,SAAS;QACX,OAAOR,WAAW;MACtB,KAAK,MAAM;QACT,OAAOC,QAAQ;IAClB;EACH,CAAC;EAED,oBACEE,OAAA;IAAKQ,SAAS,EAAG,QAAQ;IAACC,KAAK,EAAEN,IAAI,GAAG;MAACO,OAAO,EAAE;IAAO,CAAC,GAAG;MAACA,OAAO,EAAE;IAAM,CAAE;IAAAC,QAAA,eAC7EX,OAAA;MAAKQ,SAAS,EAAC,kBAAkB;MAAAG,QAAA,gBAC/BX,OAAA;QAAQQ,SAAS,EAAC,kBAAkB;QAACI,IAAI,EAAC,QAAQ;QAACC,OAAO,EAAEP,OAAQ;QAAAK,QAAA,eAClEX,OAAA;UACEQ,SAAS,EAAC,kBAAkB;UAC5BM,EAAE,EAAC,yBAAyB;UAC5BC,GAAG,EAAEnB,aAAc;UACnBoB,GAAG,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACTpB,OAAA;QACEQ,SAAS,EAAC,kBAAkB;QAC5BO,GAAG,EAAER,OAAO,CAACF,MAAM,CAAE;QACrBW,GAAG,EAAC;MAAgC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eACFpB,OAAA;QAAIQ,SAAS,EAAC,kBAAkB;QAAAG,QAAA,EAAEP;MAAO;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACC,EAAA,GAjCQpB,WAAW;AAmCpB,eAAeA,WAAW;;AAE1B;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}