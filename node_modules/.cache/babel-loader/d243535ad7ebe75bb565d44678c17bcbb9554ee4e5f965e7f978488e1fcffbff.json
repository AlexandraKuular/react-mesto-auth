{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  //Проверка запроса\n  _checkRes(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  //Запрос данных пользователя\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(this._checkRes);\n  }\n\n  //Запрос карточек с сервера\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(res => {\n      return this._checkRes(res);\n    });\n  }\n\n  //Редактирование профиля\n  setUserInfo(userInfo) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: userInfo.name,\n        about: userInfo.about\n      })\n    }).then(this._checkRes);\n  }\n\n  //Добавление новой карточки\n  addCard(card) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      'Content-Type': 'application/json',\n      body: JSON.stringify({\n        name: card.name,\n        link: card.link\n      })\n    }).then(this._checkRes);\n  }\n\n  //Обновление аватара\n  changeAvatar(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._checkRes);\n  }\n\n  //Удаление карточки\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._checkRes);\n  }\n\n  //Постановка лайка\n  _putLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(this._checkRes);\n  }\n\n  //Снятие лайка\n  _deleteLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._checkRes);\n  }\n  likeCard(_ref) {\n    let {\n      idCard,\n      isLiked\n    } = _ref;\n    if (isLiked) {\n      return this._deleteLike(idCard);\n    }\n    return this._putLike(idCard);\n  }\n}\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-64',\n  headers: {\n    authorization: '4f420279-59a6-4255-a181-2980d0015b09',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","options","_baseUrl","baseUrl","_headers","headers","_checkRes","res","ok","json","Promise","reject","status","getUserInfo","fetch","method","then","getInitialCards","setUserInfo","userInfo","body","JSON","stringify","name","about","addCard","card","link","changeAvatar","data","avatar","deleteCard","id","_putLike","_deleteLike","likeCard","_ref","idCard","isLiked","api","authorization"],"sources":["/Users/sasha/Desktop/dev/react-mesto-auth/src/utils/Api.js"],"sourcesContent":["class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl\n    this._headers = options.headers\n  }\n\n  //Проверка запроса\n  _checkRes(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  //Запрос данных пользователя\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"GET\",\n      headers: this._headers,\n    })\n      .then(this._checkRes);\n  }\n\n  //Запрос карточек с сервера\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"GET\",\n      headers: this._headers,\n    })\n      .then(res => {\n        return this._checkRes(res);\n      });\n  }\n\n  //Редактирование профиля\n  setUserInfo(userInfo) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: userInfo.name,\n        about: userInfo.about\n      })\n    })\n    .then(this._checkRes);\n  }\n\n  //Добавление новой карточки\n  addCard(card) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      'Content-Type': 'application/json',\n      body: JSON.stringify({\n        name: card.name,\n        link: card.link\n      })\n    })\n    .then(this._checkRes);\n  }\n\n    //Обновление аватара\n    changeAvatar(data) {\n      return fetch(`${this._baseUrl}/users/me/avatar`, {\n        method: \"PATCH\",\n        headers: this._headers,\n        body: JSON.stringify({\n          avatar: data.avatar\n        })\n      })\n      .then(this._checkRes);\n    }\n\n  //Удаление карточки\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    })\n    .then(this._checkRes);\n  }\n\n  //Постановка лайка\n  _putLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: \"PUT\",\n      headers: this._headers,\n    })\n    .then(this._checkRes);\n  }\n\n  //Снятие лайка\n  _deleteLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    })\n    .then(this._checkRes);\n  }\n\n  likeCard({idCard, isLiked}) {\n    if (isLiked) {\n      return this._deleteLike(idCard);\n    }\n    return this._putLike(idCard);\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-64',\n  headers: {\n    authorization: '4f420279-59a6-4255-a181-2980d0015b09',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}