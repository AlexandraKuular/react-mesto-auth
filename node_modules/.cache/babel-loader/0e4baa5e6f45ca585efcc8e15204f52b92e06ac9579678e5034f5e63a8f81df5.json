{"ast":null,"code":"var _jsxFileName = \"/Users/sasha/Desktop/dev/react-mesto-auth/src/components/Header.js\",\n  _s = $RefreshSig$();\nimport headerLogo from '../images/logo.svg';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Header(_ref) {\n  _s();\n  let {\n    loggedIn,\n    logOut,\n    email\n  } = _ref;\n  const navigate = useNavigate();\n  const location = useLocation();\n  console.log(email);\n  function signOut() {\n    localStorage.removeItem('jwt');\n    logOut();\n    navigate('/sign-in');\n  }\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"header__logo\",\n      src: headerLogo,\n      alt: \"\\u041B\\u043E\\u0433\\u043E\\u0442\\u0438\\u043F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), loggedIn && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"header__email\",\n      children: \"email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }, this), !loggedIn && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"header__btn\",\n      children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 22\n    }, this), loggedIn && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"header__btn\",\n      onClick: signOut,\n      children: \"\\u0412\\u044B\\u0439\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(Header, \"VDZHUspDq9N5O9RWjniBrjgIdAA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Header;\nexport default Header;\n\n//примерно это должно быть\n/*  <header className=\"header\">\n    <div className={`header__container ${loggedIn && \"header__container_logged\"}`}>\n      <div className=\"header__title\">\n        <img src={logo} alt=\"Логотип - место\" className=\"header__logo\" />\n        {loggedIn && (\n          <button\n            className={`header__button ${navActive && \"header__button_active\"}`}\n            onClick={toggleNav}\n          ></button>\n        )}\n      </div>\n      <div className={`${classHeaderAuthLogged} ${navActive && \"header__auth_logged_active\"}`}>\n        <p className=\"header__email\">{loggedIn && email}</p>\n        {links[path]}\n      </div>\n    </div>\n  </header>\n\n  {\n    isPopupOpened && (\n        <div className='header__popup'>\n            {email && <p className='header__popup-text'>{email}</p>}\n            <Link to='/sign-in'\n                  className='header__link'\n                  onClick={() => {\n                      logout();\n                      togglePopup();\n                  }}>\n                Выйти\n            </Link>\n        </div>\n    )\n}\n<header className=\"header\">\n    <img src={Logo} alt=\"Логотип Место\" className=\"header__logo\"/>\n    <div className='header__wrapper'>\n        {email && <p className='header__text'>{email}</p>}\n        <Routes>\n            <Route path='/sign-up' element={<Link to='/sign-in' className={`header__link ${location.pathname === '/' ? 'header__link_invisible' : ''}`}>\n                Войти\n            </Link>}/>\n            <Route path='/sign-in' element={<Link to='/sign-up' className={`header__link ${location.pathname === '/' ? 'header__link_invisible' : ''}`}>\n                Регистрация\n            </Link>}/>\n            <Route path='/' element={<Link to='/sign-in' className={`header__link ${location.pathname === '/' ? 'header__link_invisible' : ''}`}\n                                           onClick={logout}>\n                Выйти\n            </Link>}/>\n        </Routes>\n        {location.pathname === '/' && <div className='burger' onClick={togglePopup}>\n            <span\n                className={`burger__line burger__line_first ${isPopupOpened ? 'burger__line_first_opened' : ''}`}/>\n            <span\n                className={`burger__line burger__line_second ${isPopupOpened ? 'burger__line_second_opened' : ''}`}/>\n            <span\n                className={`burger__line burger__line_third ${isPopupOpened ? 'burger__line_third_opened' : ''}`}/>\n        </div>}\n    </div>\n</header>*/\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["headerLogo","Link","useNavigate","useLocation","jsxDEV","_jsxDEV","Header","_ref","_s","loggedIn","logOut","email","navigate","location","console","log","signOut","localStorage","removeItem","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/sasha/Desktop/dev/react-mesto-auth/src/components/Header.js"],"sourcesContent":["import headerLogo from '../images/logo.svg';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\n\n\nfunction Header({ loggedIn, logOut, email }) {\n  const navigate = useNavigate();\n  const location = useLocation();\n  console.log(email);\n\n  function signOut() {\n    localStorage.removeItem('jwt');\n    logOut();\n    navigate('/sign-in');\n  }\n\n  return (\n    <header className=\"header\">\n      <img className=\"header__logo\" src={headerLogo} alt=\"Логотип\" />\n      {loggedIn && (<button className='header__email'>email</button>)}\n      {!loggedIn && (<button className='header__btn'>Войти</button>)}\n      {loggedIn && (<button className='header__btn' onClick={signOut}>Выйти</button>)}\n    </header>\n  )\n}\n\nexport default Header;\n\n\n\n\n//примерно это должно быть\n  /*  <header className=\"header\">\n      <div className={`header__container ${loggedIn && \"header__container_logged\"}`}>\n        <div className=\"header__title\">\n          <img src={logo} alt=\"Логотип - место\" className=\"header__logo\" />\n          {loggedIn && (\n            <button\n              className={`header__button ${navActive && \"header__button_active\"}`}\n              onClick={toggleNav}\n            ></button>\n          )}\n        </div>\n        <div className={`${classHeaderAuthLogged} ${navActive && \"header__auth_logged_active\"}`}>\n          <p className=\"header__email\">{loggedIn && email}</p>\n          {links[path]}\n        </div>\n      </div>\n    </header>\n\n\n\n    {\n      isPopupOpened && (\n          <div className='header__popup'>\n              {email && <p className='header__popup-text'>{email}</p>}\n              <Link to='/sign-in'\n                    className='header__link'\n                    onClick={() => {\n                        logout();\n                        togglePopup();\n                    }}>\n                  Выйти\n              </Link>\n          </div>\n      )\n  }\n  <header className=\"header\">\n      <img src={Logo} alt=\"Логотип Место\" className=\"header__logo\"/>\n      <div className='header__wrapper'>\n          {email && <p className='header__text'>{email}</p>}\n          <Routes>\n              <Route path='/sign-up' element={<Link to='/sign-in' className={`header__link ${location.pathname === '/' ? 'header__link_invisible' : ''}`}>\n                  Войти\n              </Link>}/>\n              <Route path='/sign-in' element={<Link to='/sign-up' className={`header__link ${location.pathname === '/' ? 'header__link_invisible' : ''}`}>\n                  Регистрация\n              </Link>}/>\n              <Route path='/' element={<Link to='/sign-in' className={`header__link ${location.pathname === '/' ? 'header__link_invisible' : ''}`}\n                                             onClick={logout}>\n                  Выйти\n              </Link>}/>\n          </Routes>\n          {location.pathname === '/' && <div className='burger' onClick={togglePopup}>\n              <span\n                  className={`burger__line burger__line_first ${isPopupOpened ? 'burger__line_first_opened' : ''}`}/>\n              <span\n                  className={`burger__line burger__line_second ${isPopupOpened ? 'burger__line_second_opened' : ''}`}/>\n              <span\n                  className={`burger__line burger__line_third ${isPopupOpened ? 'burger__line_third_opened' : ''}`}/>\n          </div>}\n      </div>\n  </header>*/"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,oBAAoB;AAC3C,SAASC,IAAI,EAAEC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlE,SAASC,MAAMA,CAAAC,IAAA,EAA8B;EAAAC,EAAA;EAAA,IAA7B;IAAEC,QAAQ;IAAEC,MAAM;IAAEC;EAAM,CAAC,GAAAJ,IAAA;EACzC,MAAMK,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9BW,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;EAElB,SAASK,OAAOA,CAAA,EAAG;IACjBC,YAAY,CAACC,UAAU,CAAC,KAAK,CAAC;IAC9BR,MAAM,CAAC,CAAC;IACRE,QAAQ,CAAC,UAAU,CAAC;EACtB;EAEA,oBACEP,OAAA;IAAQc,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACxBf,OAAA;MAAKc,SAAS,EAAC,cAAc;MAACE,GAAG,EAAErB,UAAW;MAACsB,GAAG,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC9DjB,QAAQ,iBAAKJ,OAAA;MAAQc,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAE,EAC9D,CAACjB,QAAQ,iBAAKJ,OAAA;MAAQc,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAE,EAC7DjB,QAAQ,iBAAKJ,OAAA;MAAQc,SAAS,EAAC,aAAa;MAACQ,OAAO,EAAEX,OAAQ;MAAAI,QAAA,EAAC;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzE,CAAC;AAEb;AAAClB,EAAA,CAnBQF,MAAM;EAAA,QACIJ,WAAW,EACXC,WAAW;AAAA;AAAAyB,EAAA,GAFrBtB,MAAM;AAqBf,eAAeA,MAAM;;AAKrB;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1DE,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}