{"ast":null,"code":"var _jsxFileName = \"/Users/sasha/Desktop/dev/react-mesto-auth/src/components/Header.js\",\n  _s = $RefreshSig$();\nimport headerLogo from '../images/logo.svg';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Header(_ref) {\n  _s();\n  let {\n    loggedIn,\n    logOut,\n    email\n  } = _ref;\n  const navigate = useNavigate();\n  const location = useLocation();\n  console.log(location);\n  function signOut() {\n    localStorage.removeItem('jwt');\n    logOut();\n    navigate('/sign-in');\n  }\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"header__logo\",\n      src: headerLogo,\n      alt: \"\\u041B\\u043E\\u0433\\u043E\\u0442\\u0438\\u043F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), getBtn()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(Header, \"VDZHUspDq9N5O9RWjniBrjgIdAA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Header;\nexport default Header;\nconst getBtn = (loggedIn, pathname, email, signOut, navigate) => {\n  if (loggedIn) {\n    /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"header__email\",\n        children: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"header__btn\",\n        onClick: signOut,\n        children: \"\\u0412\\u044B\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  } else {\n    switch (pathname) {\n      case \"/sign-in\":\n        return button;\n      case \"/sign-in\":\n        return button;\n    }\n  }\n};\n{\n  loggedIn && /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"header__email\",\n    children: email\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 21\n  }, this);\n}\n{\n  !loggedIn && /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"header__btn\",\n    children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 22\n  }, this);\n}\n{\n  loggedIn && /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"header__btn\",\n    onClick: signOut,\n    children: \"\\u0412\\u044B\\u0439\\u0442\\u0438\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 21\n  }, this);\n}\n\n//примерно это должно быть\n/*  <header className=\"header\">\n    <div className={`header__container ${loggedIn && \"header__container_logged\"}`}>\n      <div className=\"header__title\">\n        <img src={logo} alt=\"Логотип - место\" className=\"header__logo\" />\n        {loggedIn && (\n          <button\n            className={`header__button ${navActive && \"header__button_active\"}`}\n            onClick={toggleNav}\n          ></button>\n        )}\n      </div>\n      <div className={`${classHeaderAuthLogged} ${navActive && \"header__auth_logged_active\"}`}>\n        <p className=\"header__email\">{loggedIn && email}</p>\n        {links[path]}\n      </div>\n    </div>\n  </header>\n\n  {\n    isPopupOpened && (\n        <div className='header__popup'>\n            {email && <p className='header__popup-text'>{email}</p>}\n            <Link to='/sign-in'\n                  className='header__link'\n                  onClick={() => {\n                      logout();\n                      togglePopup();\n                  }}>\n                Выйти\n            </Link>\n        </div>\n    )\n}\n<header className=\"header\">\n    <img src={Logo} alt=\"Логотип Место\" className=\"header__logo\"/>\n    <div className='header__wrapper'>\n        {email && <p className='header__text'>{email}</p>}\n        <Routes>\n            <Route path='/sign-up' element={<Link to='/sign-in' className={`header__link ${location.pathname === '/' ? 'header__link_invisible' : ''}`}>\n                Войти\n            </Link>}/>\n            <Route path='/sign-in' element={<Link to='/sign-up' className={`header__link ${location.pathname === '/' ? 'header__link_invisible' : ''}`}>\n                Регистрация\n            </Link>}/>\n            <Route path='/' element={<Link to='/sign-in' className={`header__link ${location.pathname === '/' ? 'header__link_invisible' : ''}`}\n                                           onClick={logout}>\n                Выйти\n            </Link>}/>\n        </Routes>\n        {location.pathname === '/' && <div className='burger' onClick={togglePopup}>\n            <span\n                className={`burger__line burger__line_first ${isPopupOpened ? 'burger__line_first_opened' : ''}`}/>\n            <span\n                className={`burger__line burger__line_second ${isPopupOpened ? 'burger__line_second_opened' : ''}`}/>\n            <span\n                className={`burger__line burger__line_third ${isPopupOpened ? 'burger__line_third_opened' : ''}`}/>\n        </div>}\n    </div>\n</header>*/\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["headerLogo","Link","useNavigate","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","Header","_ref","_s","loggedIn","logOut","email","navigate","location","console","log","signOut","localStorage","removeItem","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","getBtn","_c","pathname","onClick","button","$RefreshReg$"],"sources":["/Users/sasha/Desktop/dev/react-mesto-auth/src/components/Header.js"],"sourcesContent":["import headerLogo from '../images/logo.svg';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\n\n\nfunction Header({ loggedIn, logOut, email }) {\n  const navigate = useNavigate();\n  const location = useLocation();\n  console.log(location);\n\n  function signOut() {\n    localStorage.removeItem('jwt');\n    logOut();\n    navigate('/sign-in');\n  }\n\n  return (\n    <header className=\"header\">\n      <img className=\"header__logo\" src={headerLogo} alt=\"Логотип\" />\n      {getBtn()}\n    </header>\n  )\n}\n\nexport default Header;\n\n\nconst getBtn = (loggedIn, pathname, email, signOut, navigate) => {\n  if (loggedIn) {\n    <>\n      <span className='header__email'>{email}</span>\n      <button className='header__btn' onClick={signOut}>Выйти</button>\n    </>\n  } else {\n    switch(pathname) {\n      case \"/sign-in\":\n        return button;\n      case \"/sign-in\":\n        return button;\n    }\n  }\n}\n\n      {loggedIn && (<button className='header__email'>{email}</button>)}\n      {!loggedIn && (<button className='header__btn'>Войти</button>)}\n      {loggedIn && (<button className='header__btn' onClick={signOut}>Выйти</button>)}\n\n\n\n//примерно это должно быть\n  /*  <header className=\"header\">\n      <div className={`header__container ${loggedIn && \"header__container_logged\"}`}>\n        <div className=\"header__title\">\n          <img src={logo} alt=\"Логотип - место\" className=\"header__logo\" />\n          {loggedIn && (\n            <button\n              className={`header__button ${navActive && \"header__button_active\"}`}\n              onClick={toggleNav}\n            ></button>\n          )}\n        </div>\n        <div className={`${classHeaderAuthLogged} ${navActive && \"header__auth_logged_active\"}`}>\n          <p className=\"header__email\">{loggedIn && email}</p>\n          {links[path]}\n        </div>\n      </div>\n    </header>\n\n\n\n    {\n      isPopupOpened && (\n          <div className='header__popup'>\n              {email && <p className='header__popup-text'>{email}</p>}\n              <Link to='/sign-in'\n                    className='header__link'\n                    onClick={() => {\n                        logout();\n                        togglePopup();\n                    }}>\n                  Выйти\n              </Link>\n          </div>\n      )\n  }\n  <header className=\"header\">\n      <img src={Logo} alt=\"Логотип Место\" className=\"header__logo\"/>\n      <div className='header__wrapper'>\n          {email && <p className='header__text'>{email}</p>}\n          <Routes>\n              <Route path='/sign-up' element={<Link to='/sign-in' className={`header__link ${location.pathname === '/' ? 'header__link_invisible' : ''}`}>\n                  Войти\n              </Link>}/>\n              <Route path='/sign-in' element={<Link to='/sign-up' className={`header__link ${location.pathname === '/' ? 'header__link_invisible' : ''}`}>\n                  Регистрация\n              </Link>}/>\n              <Route path='/' element={<Link to='/sign-in' className={`header__link ${location.pathname === '/' ? 'header__link_invisible' : ''}`}\n                                             onClick={logout}>\n                  Выйти\n              </Link>}/>\n          </Routes>\n          {location.pathname === '/' && <div className='burger' onClick={togglePopup}>\n              <span\n                  className={`burger__line burger__line_first ${isPopupOpened ? 'burger__line_first_opened' : ''}`}/>\n              <span\n                  className={`burger__line burger__line_second ${isPopupOpened ? 'burger__line_second_opened' : ''}`}/>\n              <span\n                  className={`burger__line burger__line_third ${isPopupOpened ? 'burger__line_third_opened' : ''}`}/>\n          </div>}\n      </div>\n  </header>*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}