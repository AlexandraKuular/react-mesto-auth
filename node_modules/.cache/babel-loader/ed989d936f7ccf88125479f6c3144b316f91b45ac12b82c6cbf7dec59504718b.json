{"ast":null,"code":"class Auth {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n  _checkRes(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n  register(_ref) {\n    let {\n      email,\n      password\n    } = _ref;\n    return fetch(`${this._baseUrl}/signup`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(this._checkRes);\n  }\n  login(_ref2) {\n    let {\n      email,\n      password\n    } = _ref2;\n    return fetch(`${this._baseUrl}/signin`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(this._checkRes);\n  }\n  getToken(token) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"GET\",\n      headers: {\n        'Content-Type': \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    }).then(this._checkRes);\n  }\n}\nconst auth = new Auth({\n  baseUrl: 'https://auth.nomoreparties.co',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport default auth;","map":{"version":3,"names":["Auth","constructor","options","_baseUrl","baseUrl","_headers","headers","_checkRes","res","ok","json","Promise","reject","status","register","_ref","email","password","fetch","method","body","JSON","stringify","then","login","_ref2","getToken","token","Authorization","auth"],"sources":["/Users/sasha/Desktop/dev/react-mesto-auth/src/utils/Auth.js"],"sourcesContent":["class Auth {  \n  constructor(options) {\n    this._baseUrl = options.baseUrl\n    this._headers = options.headers\n  }\n  \n  _checkRes(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n\n  register({ email, password }) {\n    return fetch(`${this._baseUrl}/signup`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({ email, password }),\n    })\n    .then(this._checkRes);\n  }\n\n  login({ email, password }) {\n    return fetch(`${this._baseUrl}/signin`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({ email, password }),\n    })\n    .then(this._checkRes);\n  }\n\n  getToken(token) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"GET\",\n      headers: {\n        'Content-Type': \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n    .then(this._checkRes);\n  }\n}\n\nconst auth = new Auth({\n  baseUrl: 'https://auth.nomoreparties.co',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\nexport default auth;"],"mappings":"AAAA,MAAMA,IAAI,CAAC;EACTC,WAAWA,CAACC,OAAO,EAAE;IACnB,IAAI,CAACC,QAAQ,GAAGD,OAAO,CAACE,OAAO;IAC/B,IAAI,CAACC,QAAQ,GAAGH,OAAO,CAACI,OAAO;EACjC;EAEAC,SAASA,CAACC,GAAG,EAAE;IACb,IAAIA,GAAG,CAACC,EAAE,EAAE;MACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;IACnB;IACA,OAAOC,OAAO,CAACC,MAAM,CAAE,UAASJ,GAAG,CAACK,MAAO,EAAC,CAAC;EAC/C;EAEAC,QAAQA,CAAAC,IAAA,EAAsB;IAAA,IAArB;MAAEC,KAAK;MAAEC;IAAS,CAAC,GAAAF,IAAA;IAC1B,OAAOG,KAAK,CAAE,GAAE,IAAI,CAACf,QAAS,SAAQ,EAAE;MACtCgB,MAAM,EAAE,MAAM;MACdb,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBe,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEN,KAAK;QAAEC;MAAS,CAAC;IAC1C,CAAC,CAAC,CACDM,IAAI,CAAC,IAAI,CAAChB,SAAS,CAAC;EACvB;EAEAiB,KAAKA,CAAAC,KAAA,EAAsB;IAAA,IAArB;MAAET,KAAK;MAAEC;IAAS,CAAC,GAAAQ,KAAA;IACvB,OAAOP,KAAK,CAAE,GAAE,IAAI,CAACf,QAAS,SAAQ,EAAE;MACtCgB,MAAM,EAAE,MAAM;MACdb,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBe,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEN,KAAK;QAAEC;MAAS,CAAC;IAC1C,CAAC,CAAC,CACDM,IAAI,CAAC,IAAI,CAAChB,SAAS,CAAC;EACvB;EAEAmB,QAAQA,CAACC,KAAK,EAAE;IACd,OAAOT,KAAK,CAAE,GAAE,IAAI,CAACf,QAAS,WAAU,EAAE;MACxCgB,MAAM,EAAE,KAAK;MACbb,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCsB,aAAa,EAAG,UAASD,KAAM;MACjC;IACF,CAAC,CAAC,CACDJ,IAAI,CAAC,IAAI,CAAChB,SAAS,CAAC;EACvB;AACF;AAEA,MAAMsB,IAAI,GAAG,IAAI7B,IAAI,CAAC;EACpBI,OAAO,EAAE,+BAA+B;EACxCE,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,eAAeuB,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}